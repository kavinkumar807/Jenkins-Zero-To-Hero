pipeline {
  agent none

  stages {
    stage('Back-end Build & Test (PR)') {
      agent {
        docker { image 'maven:3.8.1-adoptopenjdk-11' }
      }
      when {
        changeRequest()   // run only in PR builds
        // Optionally you can also check target branch:
        // expression { env.CHANGE_TARGET == 'main' }
      }
      steps {
        script {
          echo "Back-end: building PR #${env.CHANGE_ID} from ${env.CHANGE_BRANCH} â†’ target ${env.CHANGE_TARGET}"
        }
        sh 'java -version'
      }
    }

    stage('Front-end Build & Test (PR)') {
      agent {
        docker { image 'node:16-alpine' }
      }
      when {
        changeRequest()
      }
      steps {
        script {
          echo "Front-end: building PR #${env.CHANGE_ID} from ${env.CHANGE_BRANCH}"
        }
        sh 'npm ci'
        sh 'npm test'
      }
    }

    stage('Build on main (post-merge)') {
      agent {
        docker { image 'maven:3.8.1-adoptopenjdk-11' }
      }
      when {
        allOf {
          branch 'main'
          not { changeRequest() }
        }
      }
      steps {
        script {
          echo "Building main branch after merge / push"
        }
        sh 'java -version'
      }
    }

    stage('Deploy from main') {
      agent {
        docker { image 'alpine:latest' }
      }
      when {
        allOf {
          branch 'main'
          not { changeRequest() }
        }
      }
      steps {
        script {
          echo "Deploying from main branch"
        }
        // deploy commands here
      }
    }
  }

  post {
    always {
      script {
        if (env.CHANGE_ID) {
          echo "Finished PR build #${env.CHANGE_ID}"
        } else {
          echo "Finished main build on ${env.BRANCH_NAME}"
        }
      }
    }
  }
}
